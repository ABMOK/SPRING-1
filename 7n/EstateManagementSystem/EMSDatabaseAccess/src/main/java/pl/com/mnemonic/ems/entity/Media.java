package pl.com.mnemonic.ems.entity;
// Generated 2015-11-15 09:24:20 by Hibernate Tools 4.0.0.Final

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;


/**
 * Media generated by hbm2java
 */
@Entity
@Table(name = "media", catalog = "estates")
public class Media implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idmedia;
	private String type;
	private String medianame;
	private Double price;
	private String measureunit;
	private Date dateregistered;
	private Facility facility;	
	private Set<MediaCounter> mediaCounters = new HashSet<MediaCounter>(0);

	public Media() {
	}

	public Media(String type, String medianame, Double price, String measureunit, Date dateregistered,
			Facility facility) {
		this.type = type;
		this.medianame = medianame;
		this.price = price;
		this.measureunit = measureunit;
		this.dateregistered = dateregistered;
		this.facility = facility;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idmedia", unique = true, nullable = false)
	public Integer getIdmedia() {
		return this.idmedia;
	}

	public void setIdmedia(Integer idmedia) {
		this.idmedia = idmedia;
	}

	@Column(name = "type", length = 100)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "medianame", length = 100)
	public String getMedianame() {
		return this.medianame;
	}

	public void setMedianame(String medianame) {
		this.medianame = medianame;
	}

	@Column(name = "price", precision = 22, scale = 0)
	public Double getPrice() {
		return this.price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	@Column(name = "measureunit", length = 100)
	public String getMeasureunit() {
		return this.measureunit;
	}

	public void setMeasureunit(String measureunit) {
		this.measureunit = measureunit;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateregistered", length = 10)
	public Date getDateregistered() {
		return this.dateregistered;
	}

	public void setDateregistered(Date dateregistered) {
		this.dateregistered = dateregistered;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "facility_idfacility", nullable = false)
	public Facility getFacility() {
		return this.facility;
	}

	public void setFacility(Facility facility) {
		this.facility = facility;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "media", orphanRemoval = true)
	@Cascade({CascadeType.SAVE_UPDATE, CascadeType.DELETE})
	public Set<MediaCounter> getMediaCounters() {
		return this.mediaCounters;
	}

	public void setMediaCounters(Set<MediaCounter> mediaCounters) {
		this.mediaCounters = mediaCounters;
	}

}
